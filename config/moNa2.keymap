#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt { flavor = "balanced"; };

/ {
    combos {
        compatible = "zmk,combos";

        bt1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <26 15>;
        };

        bt0 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <26 27>;
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <26 27 15>;
        };

        middle_click {
            bindings = <&mkp MB3>;
            key-positions = <30 31>;
        };

        lang1 {
            bindings = <&kp LANG1>;
            key-positions = <38 39>;
        };

        lang2 {
            bindings = <&kp LANG2>;
            key-positions = <37 40>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_rt: mt_retro_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            retro-tap;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <280>;
            quick-tap-ms = <160>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 20 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
            tapping-term-ms = <280>;
            quick-tap-ms = <160>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 21 22 23 24 25 26 27 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q            &kp W         &kp E         &kp R                      &kp T                               &kp Y      &kp U         &kp I        &kp O        &kp P
&hml LEFT_GUI A  &hml LALT S   &mt LSHIFT D  &hml LCTRL F               &lt 3 G                   &none     &lt 3 H    &hmr RCTRL J  &mt RSHFT K  &hmr RALT L  &hmr RIGHT_GUI SEMI
&kp Z            &kp X         &kp C         &kp V                      &kp B        &none        &none     &kp N      &kp M         &mkp MB1     &mkp MB2     &kp SLASH
&kp ESC          &kp LEFT_WIN  &mo 4         &lt 3 LANG_ZENKAKUHANKAKU  &lt 2 SPACE  &lt 1 TAB    &kp BSPC  &kp ENTER                                          &kp DEL
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_6  &kp N7     &kp N8            &kp N9             &kp N0
&none         &none         &none         &none         &none                   &trans  &kp TILDE     &kp CARET  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&none         &none         &none         &none         &none         &none     &trans  &none         &kp DOT    &kp LESS_THAN     &kp GREATER_THAN   &none
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION  &kp DQT    &kp HASH  &kp DOLLAR  &kp PERCENT                       &kp AMPERSAND  &kp PIPE      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&kp QUESTION     &kp SQT    &none     &kp EQUAL   &kp UNDERSCORE            &trans  &kp MINUS      &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT
&none            &kp GRAVE  &none     &none       &none           &none     &none   &kp SLASH      &kp ASTERISK  &kp COMMA             &kp PERIOD             &none
&trans           &trans     &trans    &trans      &trans          &trans    &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp F1   &kp F2          &kp F3        &kp F4           &kp F5                            &none     &kp PG_UP  &kp UP    &none      &none
&kp F6   &mt_rt LALT F7  &mt LSHFT F8  &mt_rt LCTRL F9  &kp F10                 &trans    &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END
&kp F11  &kp F12         &none         &none            &kp ESC    &none        &none     &none     &kp PG_DN  &kp DOWN  &none      &none
&trans   &trans          &trans        &kp LSHFT        &kp SPACE  &kp RSHFT    &mkp MB4  &mkp MB5                                  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        TENKEY {
            bindings = <
&none   &none   &none   &none   &none                        &kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ASTERISK
&none   &none   &none   &none   &none             &none      &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&none   &none   &none   &none   &none   &none     &none      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &kp LANG1  &kp LANG2                                                           &kp KP_ENTER
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };
    };
};
